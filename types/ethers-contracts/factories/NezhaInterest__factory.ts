/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NezhaInterest, NezhaInterestInterface } from "../NezhaInterest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ydAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "depositors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ethBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ydBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalanceETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalanceYD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositYD",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawYD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "ownerWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200168d3803806200168d833981810160405281019062000037919062000129565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b611522806200016b6000396000f3fe6080604052600436106100c4576000357c010000000000000000000000000000000000000000000000000000000090048063d8f3790f11610081578063d8f3790f146101cc578063e4b2fb7914610209578063f14210a614610246578063f6326fb31461026f578063f9bfaa7d14610279578063fc0c546a146102a2576100c4565b8063035565b6146100c95780632966bfcd146100e557806339cb4d101461010e5780638da5cb5b14610139578063a4b3519614610164578063acd1f254146101a1575b600080fd5b6100e360048036038101906100de9190610f54565b6102cd565b005b3480156100f157600080fd5b5061010c60048036038101906101079190610f54565b61055d565b005b34801561011a57600080fd5b506101236106f5565b6040516101309190610f90565b60405180910390f35b34801561014557600080fd5b5061014e6107b4565b60405161015b9190610fec565b60405180910390f35b34801561017057600080fd5b5061018b60048036038101906101869190611045565b6107d8565b6040516101989190610f90565b60405180910390f35b3480156101ad57600080fd5b506101b66107f0565b6040516101c39190610f90565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee9190611045565b61080f565b6040516102009190610f90565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b9190610f54565b610827565b60405161023d9190611081565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190610f54565b610866565b005b610277610988565b005b34801561028557600080fd5b506102a0600480360381019061029b9190611045565b610b1a565b005b3480156102ae57600080fd5b506102b7610eb5565b6040516102c491906110fb565b60405180910390f35b60008111610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030790611173565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414801561039e57506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b15610407576004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461045691906111c2565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104d8939291906111f6565b6020604051808303816000875af11580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b9190611265565b61055a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610551906112de565b60405180910390fd5b50565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d69061134a565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062e919061136a565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106ae92919061139e565b6020604051808303816000875af11580156106cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f19190611265565b5050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161076e9190611081565b602060405180830381865afa15801561078b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107af91906113dc565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60016020528060005260406000206000915090505481565b6004818154811061083757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df9061134a565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610937919061136a565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610984573d6000803e3d6000fd5b5050565b600034116109cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c290611173565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054148015610a5957506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b15610ac2576004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1191906111c2565b92505081905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ba8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9f90611455565b60405180910390fd5b60005b600480549050811015610cd15760006001600060048481548110610bd257610bd1611475565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006003600060048481548110610c5557610c54611475565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080610cc9906114a4565b915050610bab565b5060046000610ce09190610edb565b8073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610d3d573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610df49190611081565b602060405180830381865afa158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3591906113dc565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e6e92919061139e565b6020604051808303816000875af1158015610e8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb19190611265565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5080546000825590600052602060002090810190610ef99190610efc565b50565b5b80821115610f15576000816000905550600101610efd565b5090565b600080fd5b6000819050919050565b610f3181610f1e565b8114610f3c57600080fd5b50565b600081359050610f4e81610f28565b92915050565b600060208284031215610f6a57610f69610f19565b5b6000610f7884828501610f3f565b91505092915050565b610f8a81610f1e565b82525050565b6000602082019050610fa56000830184610f81565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fd682610fab565b9050919050565b610fe681610fcb565b82525050565b60006020820190506110016000830184610fdd565b92915050565b600061101282610fab565b9050919050565b61102281611007565b811461102d57600080fd5b50565b60008135905061103f81611019565b92915050565b60006020828403121561105b5761105a610f19565b5b600061106984828501611030565b91505092915050565b61107b81611007565b82525050565b60006020820190506110966000830184611072565b92915050565b6000819050919050565b60006110c16110bc6110b784610fab565b61109c565b610fab565b9050919050565b60006110d3826110a6565b9050919050565b60006110e5826110c8565b9050919050565b6110f5816110da565b82525050565b600060208201905061111060008301846110ec565b92915050565b600082825260208201905092915050565b7f6465706f73697420616d6f756e74203e20300000000000000000000000000000600082015250565b600061115d601283611116565b915061116882611127565b602082019050919050565b6000602082019050818103600083015261118c81611150565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111cd82610f1e565b91506111d883610f1e565b92508282019050808211156111f0576111ef611193565b5b92915050565b600060608201905061120b6000830186611072565b6112186020830185611072565b6112256040830184610f81565b949350505050565b60008115159050919050565b6112428161122d565b811461124d57600080fd5b50565b60008151905061125f81611239565b92915050565b60006020828403121561127b5761127a610f19565b5b600061128984828501611250565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b60006112c8601583611116565b91506112d382611292565b602082019050919050565b600060208201905081810360008301526112f7816112bb565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000611334601483611116565b915061133f826112fe565b602082019050919050565b6000602082019050818103600083015261136381611327565b9050919050565b600061137582610f1e565b915061138083610f1e565b925082820390508181111561139857611397611193565b5b92915050565b60006040820190506113b36000830185611072565b6113c06020830184610f81565b9392505050565b6000815190506113d681610f28565b92915050565b6000602082840312156113f2576113f1610f19565b5b6000611400848285016113c7565b91505092915050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b600061143f601583611116565b915061144a82611409565b602082019050919050565b6000602082019050818103600083015261146e81611432565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006114af82610f1e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114e1576114e0611193565b5b60018201905091905056fea2646970667358221220b5295927518f1fbb89a3aa8384440a5eaeb917e57e290338f3894780368e1a4d64736f6c63430008150033";

type NezhaInterestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NezhaInterestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NezhaInterest__factory extends ContractFactory {
  constructor(...args: NezhaInterestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ydAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<NezhaInterest> {
    return super.deploy(_ydAddress, overrides || {}) as Promise<NezhaInterest>;
  }
  override getDeployTransaction(
    _ydAddress: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_ydAddress, overrides || {});
  }
  override attach(address: string): NezhaInterest {
    return super.attach(address) as NezhaInterest;
  }
  override connect(signer: Signer): NezhaInterest__factory {
    return super.connect(signer) as NezhaInterest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NezhaInterestInterface {
    return new utils.Interface(_abi) as NezhaInterestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NezhaInterest {
    return new Contract(address, _abi, signerOrProvider) as NezhaInterest;
  }
}
